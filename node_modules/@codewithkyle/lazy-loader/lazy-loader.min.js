var LazyLoader=(()=>{var __defProp=Object.defineProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var lazy_loader_exports={};__export(lazy_loader_exports,{configure:()=>configure,css:()=>css,mount:()=>mount,update:()=>update});var LazyLoader=class{constructor(){this.intersectionCallback=entries=>{for(let i=0;i<entries.length;i++){if(entries[i].isIntersecting){const element=entries[i].target;const tagName=element.tagName.toLowerCase().trim();if(!customElements.get(tagName)){this.upgrade(element)}this.io.unobserve(element);element.setAttribute("web-component-state","mounted")}}};this.settings={cssDir:"css",jsDir:"js"};this.io=new IntersectionObserver(this.intersectionCallback)}configure(settings={}){this.settings=Object.assign(this.settings,settings);this.settings.cssDir=this.settings.cssDir.replace(/^\/|\/$/g,"").trim();this.settings.jsDir=this.settings.jsDir.replace(/^\/|\/$/g,"").trim();this.main()}update(){this.main()}css(files){return new Promise(async resolve=>{if(!Array.isArray(files)){files=[files]}if(!files.length){resolve()}let resolved=0;for(let i=0;i<files.length;i++){const file=files[i];let href;if(file.indexOf("https://")===0||file.indexOf("http://")===0){href=file}else if(file.indexOf("./")===0||file.indexOf("../")===0||file.indexOf("/")===0){href=file}else{href=`${location.origin}/${this.settings.cssDir}/${file.replace(/\.css$/g,"").trim()}.css`}let stylesheet=document.head.querySelector(`link[href="${href}"]`);if(!stylesheet){new Promise(resolve2=>{stylesheet=document.createElement("link");stylesheet.href=href;stylesheet.rel="stylesheet";stylesheet.onload=()=>{resolve2()};stylesheet.onerror=()=>{resolve2()};document.head.appendChild(stylesheet)}).then(()=>{resolved++;if(resolved===files.length){resolve()}})}else{resolved++;if(resolved===files.length){resolve()}}}})}async mount(tagName,constructor=null){if(!customElements.get(tagName)){if(constructor===null){try{const url=`${location.origin}/${this.settings.jsDir}/${tagName}.js`;constructor=await this.loadModule(url)}catch(e){console.error(e);throw e}}customElements.define(tagName,constructor)}return}collectLazyCSS(){let files=[];const elements=Array.from(document.body.querySelectorAll("[css]"));for(let i=0;i<elements.length;i++){const attrValue=elements[i].getAttribute("css").trim().replace(/\s+/," ");const fileNames=attrValue.split(" ");files=[...files,...fileNames];elements[i].removeAttribute("css")}return Array.from(new Set(files))}collectCustomElements(){let customElements2=[];const elements=Array.from(document.body.querySelectorAll("[web-component]:not([web-component-state])"));for(let i=0;i<elements.length;i++){elements[i].setAttribute("web-component-state","tracked");customElements2.push(elements[i])}return customElements2}async loadModule(url){let module=await import(url);if(!module?.default){const key=Object.keys(module)?.[0]??null;if(!key){throw"ES Module is exporting an empty object."}module=Object.assign({default:module[key]},module)}return module.default}getModuleUrl(element,tagName){let url=`${location.origin}/${this.settings.jsDir}/${tagName}.js`;const attrValue=element.getAttribute("web-component");if(attrValue!==""){if(attrValue.indexOf("https://")===0||attrValue.indexOf("http://")===0){url=attrValue}else if(attrValue.indexOf("./")===0||attrValue.indexOf("../")===0||attrValue.indexOf("/")===0){url=attrValue}else{url=`${location.origin}/${this.settings.jsDir}/${attrValue.replace(/^\//g,"").trim()}`}}return url}async upgrade(element){try{const tagName=element.tagName.toLowerCase().trim();const url=this.getModuleUrl(element,tagName);const constructor=await this.loadModule(url);this.mount(tagName,constructor)}catch(e){console.error(e)}}async upgradeOrTrack(elements){for(const element of elements){const loadType=element.getAttribute("loading");if(loadType==="eager"){await this.upgrade(element);element.setAttribute("web-component-state","mounted")}else{this.io.observe(element)}}}async main(){const files=this.collectLazyCSS();await this.css(files);const elements=this.collectCustomElements();this.upgradeOrTrack(elements)}};var loader=new LazyLoader;var configure=loader.configure.bind(loader);var update=loader.update.bind(loader);var mount=loader.mount.bind(loader);var css=loader.css.bind(loader);return lazy_loader_exports;})();
